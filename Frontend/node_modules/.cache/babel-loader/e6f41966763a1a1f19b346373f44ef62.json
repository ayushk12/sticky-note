{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Downloads/sticky-note/Frontend/src/components/EditNote.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Form, Button, Input, Grid, Image } from 'semantic-ui-react';\nimport noteService from '../services/noteService';\nimport { STATIC_URL } from '../config';\n\nclass EditNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      description: '',\n      file: null,\n      fileChanged: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFile = e => {\n      const file = e.target.files[0];\n      this.setState({\n        file,\n        fileChanged: true\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        title,\n        description\n      } = this.state;\n      const {\n        _id,\n        user\n      } = this.props.location.state.note;\n      const data = {\n        title,\n        description,\n        user,\n        id: _id\n      };\n\n      if (this.state.fileChanged && this.state.file) {\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        formData.append('data', JSON.stringify(data));\n        await noteService.editNote(formData);\n      } else {\n        await noteService.editNote(data);\n      }\n\n      this.props.history.push('/');\n    };\n\n    this.populateState = ({\n      title,\n      description,\n      file = null\n    }) => {\n      this.setState({\n        title,\n        description,\n        file\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      note\n    } = this.props.location.state;\n    console.log('note', note);\n    note && this.populateState(note);\n  }\n\n  render() {\n    console.log('state', this.state);\n    const {\n      title,\n      description,\n      file\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: \"arrow left\",\n      size: \"huge\",\n      onClick: () => this.props.history.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      size: \"big\",\n      style: {\n        width: '70%',\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Title\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      placeholder: \"Enter title for your note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), this.state.file && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(Image, {\n      size: \"large\",\n      src: `${STATIC_URL}/${file}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.TextArea, {\n      label: \"Description\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      placeholder: \"Write some description about your note\",\n      rows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.handleFile,\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      inverted: true,\n      color: \"blue\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Edit Note\")));\n  }\n\n}\n\nexport default EditNote;","map":{"version":3,"sources":["/home/ayush/Downloads/sticky-note/Frontend/src/components/EditNote.js"],"names":["React","Component","Fragment","Form","Button","Input","Grid","Image","noteService","STATIC_URL","EditNote","state","title","description","file","fileChanged","handleChange","e","setState","target","name","value","handleFile","files","handleSubmit","preventDefault","_id","user","props","location","note","data","id","formData","FormData","append","JSON","stringify","editNote","history","push","populateState","componentDidMount","console","log","render","goBack","width","margin"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Form, Button, Input, Grid, Image } from 'semantic-ui-react';\n\nimport noteService from '../services/noteService';\nimport { STATIC_URL } from '../config';\n\nclass EditNote extends Component {\n    state = {\n        title: '',\n        description: '',\n        file: null,\n        fileChanged: false\n    };\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleFile = e => {\n        const file = e.target.files[0];\n        this.setState({ file, fileChanged: true });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        const { title, description } = this.state;\n        const { _id, user } = this.props.location.state.note;\n\n        const data = {\n            title,\n            description,\n            user,\n            id: _id\n        };\n\n        if (this.state.fileChanged && this.state.file) {\n            const formData = new FormData();\n            formData.append('file', this.state.file);\n            formData.append('data', JSON.stringify(data));\n            await noteService.editNote(formData);\n        } else {\n            await noteService.editNote(data);\n        }\n\n        this.props.history.push('/');\n    };\n\n    populateState = ({ title, description, file = null }) => {\n        this.setState({\n            title,\n            description,\n            file\n        });\n    };\n\n    componentDidMount() {\n        const { note } = this.props.location.state;\n        console.log('note', note);\n        note && this.populateState(note);\n    }\n\n    render() {\n        console.log('state', this.state);\n        const { title, description, file } = this.state;\n        return (\n            <Grid container>\n                <Grid.Column>\n                    <Button\n                        icon=\"arrow left\"\n                        size=\"huge\"\n                        onClick={() => this.props.history.goBack()}\n                    />\n                </Grid.Column>\n                <Form size=\"big\" style={{ width: '70%', margin: '0 auto' }}>\n                    <Form.Input\n                        label=\"Title\"\n                        name=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                        placeholder=\"Enter title for your note\"\n                    />\n                    {this.state.file && (\n                        <Fragment>\n                            <label>Image</label>\n                            <Image size=\"large\" src={`${STATIC_URL}/${file}`} />\n                        </Fragment>\n                    )}\n                    <Form.TextArea\n                        label=\"Description\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this.handleChange}\n                        placeholder=\"Write some description about your note\"\n                        rows={6}\n                    />\n                    <Input\n                        type=\"file\"\n                        name=\"file\"\n                        onChange={this.handleFile}\n                        size=\"mini\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        onClick={this.handleSubmit}\n                        inverted\n                        color=\"blue\"\n                        floated=\"right\"\n                    >\n                        Edit Note\n                    </Button>\n                </Form>\n            </Grid>\n        );\n    }\n}\n\nexport default EditNote;\n"]},"metadata":{},"sourceType":"module"}