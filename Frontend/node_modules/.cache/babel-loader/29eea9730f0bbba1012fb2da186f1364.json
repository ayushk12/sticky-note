{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Downloads/sticky-note/Frontend/src/components/NewNote.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Grid } from \"semantic-ui-react\";\nimport ColorPicker from \"./ColorPicker\";\nimport noteService from \"../services/noteService\";\n\nclass NewNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      color: \"\",\n      file: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFile = e => {\n      const file = e.target.files[0];\n      this.setState({\n        file\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        title,\n        description,\n        color\n      } = this.state;\n      const data = {\n        title,\n        description,\n        color\n      };\n      let res;\n\n      if (this.state.file) {\n        const formData = new FormData();\n        formData.append(\"file\", this.state.file);\n        formData.append(\"data\", JSON.stringify(data));\n        res = await noteService.addNote(formData);\n      } else {\n        res = await noteService.addNote(data);\n      }\n\n      this.props.history.push(\"/\");\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      color,\n      file\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: \"arrow left\",\n      size: \"huge\",\n      onClick: () => this.props.history.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      size: \"big\",\n      style: {\n        width: \"70%\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Title\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      placeholder: \"Enter title for your note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      label: \"Description\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      placeholder: \"Write some description about your note\",\n      rows: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ColorPicker, {\n      color: color,\n      changeColor: color => this.setState({\n        color: color.hex\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.handleFile,\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      inverted: true,\n      color: \"blue\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Add Note\")));\n  }\n\n}\n\nexport default NewNote;","map":{"version":3,"sources":["/home/ayush/Downloads/sticky-note/Frontend/src/components/NewNote.js"],"names":["React","Component","Form","Button","Input","Grid","ColorPicker","noteService","NewNote","state","title","description","color","file","handleChange","e","setState","target","name","value","handleFile","files","handleSubmit","preventDefault","data","res","formData","FormData","append","JSON","stringify","addNote","props","history","push","render","goBack","width","margin","hex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Grid } from \"semantic-ui-react\";\nimport ColorPicker from \"./ColorPicker\";\n\nimport noteService from \"../services/noteService\";\n\nclass NewNote extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    color: \"\",\n    file: null,\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleFile = (e) => {\n    const file = e.target.files[0];\n    this.setState({ file });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { title, description, color } = this.state;\n\n    const data = {\n      title,\n      description,\n      color,\n    };\n    let res;\n    if (this.state.file) {\n      const formData = new FormData();\n      formData.append(\"file\", this.state.file);\n      formData.append(\"data\", JSON.stringify(data));\n      res = await noteService.addNote(formData);\n    } else {\n      res = await noteService.addNote(data);\n    }\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { title, description, color, file } = this.state;\n    return (\n      <Grid container>\n        <Grid.Column>\n          <Button\n            icon=\"arrow left\"\n            size=\"huge\"\n            onClick={() => this.props.history.goBack()}\n          />\n        </Grid.Column>\n        <Form size=\"big\" style={{ width: \"70%\", margin: \"0 auto\" }}>\n          <Form.Input\n            label=\"Title\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            placeholder=\"Enter title for your note\"\n          />\n          <Form.TextArea\n            label=\"Description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n            placeholder=\"Write some description about your note\"\n            rows={10}\n          />\n\n          <ColorPicker\n            color={color}\n            changeColor={(color) => this.setState({ color: color.hex })}\n          />\n\n          <Input\n            type=\"file\"\n            name=\"file\"\n            onChange={this.handleFile}\n            size=\"mini\"\n          />\n          <Button\n            type=\"submit\"\n            onClick={this.handleSubmit}\n            inverted\n            color=\"blue\"\n            floated=\"right\"\n          >\n            Add Note\n          </Button>\n        </Form>\n      </Grid>\n    );\n  }\n}\n\nexport default NewNote;\n"]},"metadata":{},"sourceType":"module"}