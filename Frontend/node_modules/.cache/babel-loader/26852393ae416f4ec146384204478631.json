{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport { BASE_URL } from '../config';\nconst apiEndpoint = `${BASE_URL}/users/login`;\nexport const login = async (email, password) => {\n  const res = await axios.post(apiEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem('token', res.data.token);\n  setTokenHeader(getJwt());\n  return res.data;\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  setTokenHeader(false);\n};\nexport const getCurrentUser = () => {\n  try {\n    const token = localStorage.getItem('token');\n    const user = jwtDecode(token).id;\n    return user;\n  } catch (ex) {\n    return null;\n  }\n};\nexport const getJwt = () => {\n  return localStorage.getItem('token');\n};\nexport const setTokenHeader = token => {\n  if (token) {\n    axios.defaults.headers.common['authorization'] = token;\n  } else {\n    delete axios.defaults.headers['authorization'];\n  }\n};\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  getJwt,\n  setTokenHeader\n};","map":{"version":3,"sources":["/home/ayush/Downloads/sticky-note/Frontend/src/services/authService.js"],"names":["jwtDecode","axios","BASE_URL","apiEndpoint","login","email","password","res","post","localStorage","setItem","data","token","setTokenHeader","getJwt","logout","removeItem","getCurrentUser","getItem","user","id","ex","defaults","headers","common"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,WAAzB;AAEA,MAAMC,WAAW,GAAI,GAAED,QAAS,cAAhC;AAEA,OAAO,MAAME,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5C,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWL,WAAX,EAAwB;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAxB,CAAlB;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACI,IAAJ,CAASC,KAAvC;AACAC,EAAAA,cAAc,CAACC,MAAM,EAAP,CAAd;AACA,SAAOP,GAAG,CAACI,IAAX;AACH,CALM;AAOP,OAAO,MAAMI,MAAM,GAAG,MAAM;AACxBN,EAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACAH,EAAAA,cAAc,CAAC,KAAD,CAAd;AACH,CAHM;AAKP,OAAO,MAAMI,cAAc,GAAG,MAAM;AAChC,MAAI;AACA,UAAML,KAAK,GAAGH,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,IAAI,GAAGnB,SAAS,CAACY,KAAD,CAAT,CAAiBQ,EAA9B;AACA,WAAOD,IAAP;AACH,GAJD,CAIE,OAAOE,EAAP,EAAW;AACT,WAAO,IAAP;AACH;AACJ,CARM;AAUP,OAAO,MAAMP,MAAM,GAAG,MAAM;AACxB,SAAOL,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAML,cAAc,GAAGD,KAAK,IAAI;AACnC,MAAIA,KAAJ,EAAW;AACPX,IAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDZ,KAAjD;AACH,GAFD,MAEO;AACH,WAAOX,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuB,eAAvB,CAAP;AACH;AACJ,CANM;AAQP,eAAe;AACXnB,EAAAA,KADW;AAEXW,EAAAA,MAFW;AAGXE,EAAAA,cAHW;AAIXH,EAAAA,MAJW;AAKXD,EAAAA;AALW,CAAf","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport { BASE_URL } from '../config';\n\nconst apiEndpoint = `${BASE_URL}/users/login`;\n\nexport const login = async (email, password) => {\n    const res = await axios.post(apiEndpoint, { email, password });\n    localStorage.setItem('token', res.data.token);\n    setTokenHeader(getJwt());\n    return res.data;\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    setTokenHeader(false);\n};\n\nexport const getCurrentUser = () => {\n    try {\n        const token = localStorage.getItem('token');\n        const user = jwtDecode(token).id;\n        return user;\n    } catch (ex) {\n        return null;\n    }\n};\n\nexport const getJwt = () => {\n    return localStorage.getItem('token');\n};\n\nexport const setTokenHeader = token => {\n    if (token) {\n        axios.defaults.headers.common['authorization'] = token;\n    } else {\n        delete axios.defaults.headers['authorization'];\n    }\n};\n\nexport default {\n    login,\n    logout,\n    getCurrentUser,\n    getJwt,\n    setTokenHeader\n};\n"]},"metadata":{},"sourceType":"module"}