{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Downloads/sticky-note/Frontend/src/components/AuthForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport authService from '../services/authService';\nimport { register } from '../services/userService';\n\nclass AuthForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.renderLink = () => {\n      if (this.props.type === 'Login') {\n        return /*#__PURE__*/React.createElement(Message, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, \"New to us? \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/register\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 32\n          }\n        }, \"Register\"));\n      } else return /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, \"Already a member? \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 39\n        }\n      }, \"Login\"));\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const authType = this.props.type;\n      const {\n        email,\n        password\n      } = this.state;\n      let res;\n\n      if (authType === 'Login') {\n        res = await authService.login(email, password);\n        authService.setTokenHeader(authService.getJwt());\n      } else {\n        res = await register(email, password);\n        authService.setTokenHeader(authService.getJwt());\n      }\n\n      console.log(res);\n      this.props.setUser();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    const user = authService.getCurrentUser(authService.getJwt());\n\n    if (user) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    const {\n      header,\n      type\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, header), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      type: \"email\",\n      iconPosition: \"left\",\n      name: \"email\",\n      placeholder: \"E-mail address\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, type))), this.renderLink()));\n  }\n\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/home/ayush/Downloads/sticky-note/Frontend/src/components/AuthForm.js"],"names":["React","Component","Button","Form","Grid","Header","Message","Segment","Link","authService","register","AuthForm","state","email","password","renderLink","props","type","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","authType","res","login","setTokenHeader","getJwt","console","log","setUser","history","push","componentDidMount","user","getCurrentUser","render","header","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Form,\n    Grid,\n    Header,\n    Message,\n    Segment\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport authService from '../services/authService';\nimport { register } from '../services/userService';\n\nclass AuthForm extends Component {\n    state = {\n        email: '',\n        password: ''\n    };\n\n    componentDidMount() {\n        const user = authService.getCurrentUser(authService.getJwt());\n        if (user) {\n            this.props.history.push('/');\n        }\n    }\n\n    renderLink = () => {\n        if (this.props.type === 'Login') {\n            return (\n                <Message>\n                    New to us? <Link to=\"/register\">Register</Link>\n                </Message>\n            );\n        } else\n            return (\n                <Message>\n                    Already a member? <Link to=\"/login\">Login</Link>\n                </Message>\n            );\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const authType = this.props.type;\n        const { email, password } = this.state;\n        let res;\n        if (authType === 'Login') {\n            res = await authService.login(email, password);\n            authService.setTokenHeader(authService.getJwt());\n        } else {\n            res = await register(email, password);\n            authService.setTokenHeader(authService.getJwt());\n        }\n\n        console.log(res);\n\n        this.props.setUser();\n        this.props.history.push('/');\n    };\n\n    render() {\n        const { header, type } = this.props;\n        return (\n            <Grid\n                textAlign=\"center\"\n                style={{ height: '100vh' }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n                        {header}\n                    </Header>\n                    <Form size=\"large\" onSubmit={this.handleSubmit}>\n                        <Segment>\n                            <Form.Input\n                                fluid\n                                icon=\"user\"\n                                type=\"email\"\n                                iconPosition=\"left\"\n                                name=\"email\"\n                                placeholder=\"E-mail address\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                fluid\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n\n                            <Button color=\"teal\" fluid size=\"large\">\n                                {type}\n                            </Button>\n                        </Segment>\n                    </Form>\n                    {this.renderLink()}\n                </Grid.Column>\n            </Grid>\n        );\n    }\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}