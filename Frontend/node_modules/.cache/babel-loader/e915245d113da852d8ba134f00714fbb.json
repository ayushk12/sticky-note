{"ast":null,"code":"var _jsxFileName = \"/home/ayush/Downloads/sticky-note/Frontend/src/components/Home.js\";\nimport React, { Component } from \"react\";\nimport { Card, Grid, Button, Image } from \"semantic-ui-react\";\nimport ColorPicker from \"./ColorPicker\";\nimport Moment from \"react-moment\";\nimport noteService from \"../services/noteService\";\nimport { STATIC_URL } from \"../config\";\nconst colorTheme = [{\n  color: \"#f54290\"\n}, {\n  color: \"orange\"\n}, {\n  color: \"violet\"\n}, {\n  color: \"#34eb80\"\n}, {\n  color: \"#34d3eb\"\n}];\nconst len = colorTheme.length;\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: []\n    };\n\n    this.editNote = note => {\n      this.props.history.push({\n        pathname: \"/editNote\",\n        state: {\n          note,\n          color\n        }\n      });\n    };\n\n    this.newNote = () => {\n      this.props.history.push(\"/newNote\");\n    };\n\n    this.deleteNote = async (event, note) => {\n      event.stopPropagation();\n      const notes = this.state.notes.filter(n => n._id !== note._id);\n      this.setState({\n        notes: [...notes]\n      });\n      const data = await noteService.deleteNote(note);\n    };\n\n    this.renderNotesCard = notes => {\n      return notes.map((note, i) => {\n        return /*#__PURE__*/React.createElement(Grid.Column, {\n          key: note._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            margin: \"20px 0px\",\n            background: `${colorTheme[i % len].color}`\n          },\n          className: \"card__frame\",\n          onClick: () => this.editNote(note),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, note.file && /*#__PURE__*/React.createElement(Image, {\n          src: `${STATIC_URL}/${note.file}`,\n          size: \"tiny\",\n          wrapped: true,\n          ui: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          circular: true,\n          color: \"red\",\n          floated: \"right\",\n          icon: \"close\",\n          onClick: e => this.deleteNote(e, note),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        }, note.title), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        }, \"Created At\", ` `, /*#__PURE__*/React.createElement(Moment, {\n          date: note.createdAt,\n          format: \"DD-MMM-YYYY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        }, note.description))));\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const notes = await noteService.getNotes();\n    console.log(\"data\", notes.data);\n    this.setState({\n      notes: [...this.state.notes, ...notes.data]\n    });\n  }\n\n  render() {\n    const {\n      notes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      circular: true,\n      size: \"massive\",\n      icon: \"add\",\n      inverted: true,\n      color: \"green\",\n      onClick: this.newNote,\n      style: {\n        position: \"fixed\",\n        top: \"15vh\",\n        left: \"4vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, notes && notes.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      columns: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, this.renderNotesCard(notes)))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/ayush/Downloads/sticky-note/Frontend/src/components/Home.js"],"names":["React","Component","Card","Grid","Button","Image","ColorPicker","Moment","noteService","STATIC_URL","colorTheme","color","len","length","Home","state","notes","editNote","note","props","history","push","pathname","newNote","deleteNote","event","stopPropagation","filter","n","_id","setState","data","renderNotesCard","map","i","margin","background","file","e","title","createdAt","description","componentDidMount","getNotes","console","log","render","position","top","left"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Button, Image } from \"semantic-ui-react\";\nimport ColorPicker from \"./ColorPicker\";\nimport Moment from \"react-moment\";\n\nimport noteService from \"../services/noteService\";\nimport { STATIC_URL } from \"../config\";\n\nconst colorTheme = [\n  { color: \"#f54290\" },\n  { color: \"orange\" },\n  { color: \"violet\" },\n  { color: \"#34eb80\" },\n  { color: \"#34d3eb\" },\n];\n\nconst len = colorTheme.length;\n\nclass Home extends Component {\n  state = {\n    notes: [],\n  };\n\n  editNote = (note) => {\n    this.props.history.push({\n      pathname: \"/editNote\",\n      state: { note, color },\n    });\n  };\n\n  newNote = () => {\n    this.props.history.push(\"/newNote\");\n  };\n\n  deleteNote = async (event, note) => {\n    event.stopPropagation();\n    const notes = this.state.notes.filter((n) => n._id !== note._id);\n    this.setState({ notes: [...notes] });\n\n    const data = await noteService.deleteNote(note);\n  };\n\n  async componentDidMount() {\n    const notes = await noteService.getNotes();\n    console.log(\"data\", notes.data);\n    this.setState({\n      notes: [...this.state.notes, ...notes.data],\n    });\n  }\n\n  renderNotesCard = (notes) => {\n    return notes.map((note, i) => {\n      return (\n        <Grid.Column key={note._id}>\n          <Card\n            style={{\n              margin: \"20px 0px\",\n              background: `${colorTheme[i % len].color}`,\n            }}\n            className=\"card__frame\"\n            onClick={() => this.editNote(note)}\n          >\n            {note.file && (\n              <Image\n                src={`${STATIC_URL}/${note.file}`}\n                size=\"tiny\"\n                wrapped\n                ui={false}\n              />\n            )}\n            <Card.Content>\n              <Button\n                circular\n                color=\"red\"\n                floated=\"right\"\n                icon=\"close\"\n                onClick={(e) => this.deleteNote(e, note)}\n              />\n              <Card.Header>{note.title}</Card.Header>\n              <Card.Meta>\n                Created At{` `}\n                <Moment date={note.createdAt} format=\"DD-MMM-YYYY\" />\n              </Card.Meta>\n              <Card.Description>{note.description}</Card.Description>\n            </Card.Content>\n          </Card>\n        </Grid.Column>\n      );\n    });\n  };\n\n  render() {\n    const { notes } = this.state;\n    return (\n      <Grid centered columns={2} style={{ position: \"relative\" }}>\n        <Grid.Column width={1}>\n          <Button\n            circular\n            size=\"massive\"\n            icon=\"add\"\n            inverted\n            color=\"green\"\n            onClick={this.newNote}\n            style={{ position: \"fixed\", top: \"15vh\", left: \"4vw\" }}\n          />\n        </Grid.Column>\n\n        <Grid.Column width={13}>\n          {notes && notes.length > 0 && (\n            <Grid centered columns={4}>\n              <Grid.Row>{this.renderNotesCard(notes)}</Grid.Row>\n            </Grid>\n          )}\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}