{"ast":null,"code":"//! moment-timezone.js\n//! version : 0.5.28\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n(function (root, factory) {\n  \"use strict\";\n  /*global define*/\n\n  if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('moment')); // Node\n  } else if (typeof define === 'function' && define.amd) {\n    define(['moment'], factory); // AMD\n  } else {\n    factory(root.moment); // Browser\n  }\n})(this, function (moment) {\n  \"use strict\"; // Do not load moment-timezone a second time.\n  // if (moment.tz !== undefined) {\n  // \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n  // \treturn moment;\n  // }\n\n  var VERSION = \"0.5.28\",\n      zones = {},\n      links = {},\n      countries = {},\n      names = {},\n      guesses = {},\n      cachedGuess;\n\n  if (!moment || typeof moment.version !== 'string') {\n    logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n  }\n\n  var momentVersion = moment.version.split('.'),\n      major = +momentVersion[0],\n      minor = +momentVersion[1]; // Moment.js version check\n\n  if (major < 2 || major === 2 && minor < 6) {\n    logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n  }\n  /************************************\n  \tUnpacking\n  ************************************/\n\n\n  function charCodeToInt(charCode) {\n    if (charCode > 96) {\n      return charCode - 87;\n    } else if (charCode > 64) {\n      return charCode - 29;\n    }\n\n    return charCode - 48;\n  }\n\n  function unpackBase60(string) {\n    var i = 0,\n        parts = string.split('.'),\n        whole = parts[0],\n        fractional = parts[1] || '',\n        multiplier = 1,\n        num,\n        out = 0,\n        sign = 1; // handle negative numbers\n\n    if (string.charCodeAt(0) === 45) {\n      i = 1;\n      sign = -1;\n    } // handle digits before the decimal\n\n\n    for (i; i < whole.length; i++) {\n      num = charCodeToInt(whole.charCodeAt(i));\n      out = 60 * out + num;\n    } // handle digits after the decimal\n\n\n    for (i = 0; i < fractional.length; i++) {\n      multiplier = multiplier / 60;\n      num = charCodeToInt(fractional.charCodeAt(i));\n      out += num * multiplier;\n    }\n\n    return out * sign;\n  }\n\n  function arrayToInt(array) {\n    for (var i = 0; i < array.length; i++) {\n      array[i] = unpackBase60(array[i]);\n    }\n  }\n\n  function intToUntil(array, length) {\n    for (var i = 0; i < length; i++) {\n      array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000); // minutes to milliseconds\n    }\n\n    array[length - 1] = Infinity;\n  }\n\n  function mapIndices(source, indices) {\n    var out = [],\n        i;\n\n    for (i = 0; i < indices.length; i++) {\n      out[i] = source[indices[i]];\n    }\n\n    return out;\n  }\n\n  function unpack(string) {\n    var data = string.split('|'),\n        offsets = data[2].split(' '),\n        indices = data[3].split(''),\n        untils = data[4].split(' ');\n    arrayToInt(offsets);\n    arrayToInt(indices);\n    arrayToInt(untils);\n    intToUntil(untils, indices.length);\n    return {\n      name: data[0],\n      abbrs: mapIndices(data[1].split(' '), indices),\n      offsets: mapIndices(offsets, indices),\n      untils: untils,\n      population: data[5] | 0\n    };\n  }\n  /************************************\n  \tZone object\n  ************************************/\n\n\n  function Zone(packedString) {\n    if (packedString) {\n      this._set(unpack(packedString));\n    }\n  }\n\n  Zone.prototype = {\n    _set: function (unpacked) {\n      this.name = unpacked.name;\n      this.abbrs = unpacked.abbrs;\n      this.untils = unpacked.untils;\n      this.offsets = unpacked.offsets;\n      this.population = unpacked.population;\n    },\n    _index: function (timestamp) {\n      var target = +timestamp,\n          untils = this.untils,\n          i;\n\n      for (i = 0; i < untils.length; i++) {\n        if (target < untils[i]) {\n          return i;\n        }\n      }\n    },\n    countries: function () {\n      var zone_name = this.name;\n      return Object.keys(countries).filter(function (country_code) {\n        return countries[country_code].zones.indexOf(zone_name) !== -1;\n      });\n    },\n    parse: function (timestamp) {\n      var target = +timestamp,\n          offsets = this.offsets,\n          untils = this.untils,\n          max = untils.length - 1,\n          offset,\n          offsetNext,\n          offsetPrev,\n          i;\n\n      for (i = 0; i < max; i++) {\n        offset = offsets[i];\n        offsetNext = offsets[i + 1];\n        offsetPrev = offsets[i ? i - 1 : i];\n\n        if (offset < offsetNext && tz.moveAmbiguousForward) {\n          offset = offsetNext;\n        } else if (offset > offsetPrev && tz.moveInvalidForward) {\n          offset = offsetPrev;\n        }\n\n        if (target < untils[i] - offset * 60000) {\n          return offsets[i];\n        }\n      }\n\n      return offsets[max];\n    },\n    abbr: function (mom) {\n      return this.abbrs[this._index(mom)];\n    },\n    offset: function (mom) {\n      logError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n      return this.offsets[this._index(mom)];\n    },\n    utcOffset: function (mom) {\n      return this.offsets[this._index(mom)];\n    }\n  };\n  /************************************\n  \tCountry object\n  ************************************/\n\n  function Country(country_name, zone_names) {\n    this.name = country_name;\n    this.zones = zone_names;\n  }\n  /************************************\n  \tCurrent Timezone\n  ************************************/\n\n\n  function OffsetAt(at) {\n    var timeString = at.toTimeString();\n    var abbr = timeString.match(/\\([a-z ]+\\)/i);\n\n    if (abbr && abbr[0]) {\n      // 17:56:31 GMT-0600 (CST)\n      // 17:56:31 GMT-0600 (Central Standard Time)\n      abbr = abbr[0].match(/[A-Z]/g);\n      abbr = abbr ? abbr.join('') : undefined;\n    } else {\n      // 17:56:31 CST\n      // 17:56:31 GMT+0800 (台北標準時間)\n      abbr = timeString.match(/[A-Z]{3,5}/g);\n      abbr = abbr ? abbr[0] : undefined;\n    }\n\n    if (abbr === 'GMT') {\n      abbr = undefined;\n    }\n\n    this.at = +at;\n    this.abbr = abbr;\n    this.offset = at.getTimezoneOffset();\n  }\n\n  function ZoneScore(zone) {\n    this.zone = zone;\n    this.offsetScore = 0;\n    this.abbrScore = 0;\n  }\n\n  ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n    this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\n    if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n      this.abbrScore++;\n    }\n  };\n\n  function findChange(low, high) {\n    var mid, diff;\n\n    while (diff = ((high.at - low.at) / 12e4 | 0) * 6e4) {\n      mid = new OffsetAt(new Date(low.at + diff));\n\n      if (mid.offset === low.offset) {\n        low = mid;\n      } else {\n        high = mid;\n      }\n    }\n\n    return low;\n  }\n\n  function userOffsets() {\n    var startYear = new Date().getFullYear() - 2,\n        last = new OffsetAt(new Date(startYear, 0, 1)),\n        offsets = [last],\n        change,\n        next,\n        i;\n\n    for (i = 1; i < 48; i++) {\n      next = new OffsetAt(new Date(startYear, i, 1));\n\n      if (next.offset !== last.offset) {\n        change = findChange(last, next);\n        offsets.push(change);\n        offsets.push(new OffsetAt(new Date(change.at + 6e4)));\n      }\n\n      last = next;\n    }\n\n    for (i = 0; i < 4; i++) {\n      offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n      offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n    }\n\n    return offsets;\n  }\n\n  function sortZoneScores(a, b) {\n    if (a.offsetScore !== b.offsetScore) {\n      return a.offsetScore - b.offsetScore;\n    }\n\n    if (a.abbrScore !== b.abbrScore) {\n      return a.abbrScore - b.abbrScore;\n    }\n\n    if (a.zone.population !== b.zone.population) {\n      return b.zone.population - a.zone.population;\n    }\n\n    return b.zone.name.localeCompare(a.zone.name);\n  }\n\n  function addToGuesses(name, offsets) {\n    var i, offset;\n    arrayToInt(offsets);\n\n    for (i = 0; i < offsets.length; i++) {\n      offset = offsets[i];\n      guesses[offset] = guesses[offset] || {};\n      guesses[offset][name] = true;\n    }\n  }\n\n  function guessesForUserOffsets(offsets) {\n    var offsetsLength = offsets.length,\n        filteredGuesses = {},\n        out = [],\n        i,\n        j,\n        guessesOffset;\n\n    for (i = 0; i < offsetsLength; i++) {\n      guessesOffset = guesses[offsets[i].offset] || {};\n\n      for (j in guessesOffset) {\n        if (guessesOffset.hasOwnProperty(j)) {\n          filteredGuesses[j] = true;\n        }\n      }\n    }\n\n    for (i in filteredGuesses) {\n      if (filteredGuesses.hasOwnProperty(i)) {\n        out.push(names[i]);\n      }\n    }\n\n    return out;\n  }\n\n  function rebuildGuess() {\n    // use Intl API when available and returning valid time zone\n    try {\n      var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n      if (intlName && intlName.length > 3) {\n        var name = names[normalizeName(intlName)];\n\n        if (name) {\n          return name;\n        }\n\n        logError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n      }\n    } catch (e) {// Intl unavailable, fall back to manual guessing.\n    }\n\n    var offsets = userOffsets(),\n        offsetsLength = offsets.length,\n        guesses = guessesForUserOffsets(offsets),\n        zoneScores = [],\n        zoneScore,\n        i,\n        j;\n\n    for (i = 0; i < guesses.length; i++) {\n      zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\n      for (j = 0; j < offsetsLength; j++) {\n        zoneScore.scoreOffsetAt(offsets[j]);\n      }\n\n      zoneScores.push(zoneScore);\n    }\n\n    zoneScores.sort(sortZoneScores);\n    return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n  }\n\n  function guess(ignoreCache) {\n    if (!cachedGuess || ignoreCache) {\n      cachedGuess = rebuildGuess();\n    }\n\n    return cachedGuess;\n  }\n  /************************************\n  \tGlobal Methods\n  ************************************/\n\n\n  function normalizeName(name) {\n    return (name || '').toLowerCase().replace(/\\//g, '_');\n  }\n\n  function addZone(packed) {\n    var i, name, split, normalized;\n\n    if (typeof packed === \"string\") {\n      packed = [packed];\n    }\n\n    for (i = 0; i < packed.length; i++) {\n      split = packed[i].split('|');\n      name = split[0];\n      normalized = normalizeName(name);\n      zones[normalized] = packed[i];\n      names[normalized] = name;\n      addToGuesses(normalized, split[2].split(' '));\n    }\n  }\n\n  function getZone(name, caller) {\n    name = normalizeName(name);\n    var zone = zones[name];\n    var link;\n\n    if (zone instanceof Zone) {\n      return zone;\n    }\n\n    if (typeof zone === 'string') {\n      zone = new Zone(zone);\n      zones[name] = zone;\n      return zone;\n    } // Pass getZone to prevent recursion more than 1 level deep\n\n\n    if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n      zone = zones[name] = new Zone();\n\n      zone._set(link);\n\n      zone.name = names[name];\n      return zone;\n    }\n\n    return null;\n  }\n\n  function getNames() {\n    var i,\n        out = [];\n\n    for (i in names) {\n      if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n        out.push(names[i]);\n      }\n    }\n\n    return out.sort();\n  }\n\n  function getCountryNames() {\n    return Object.keys(countries);\n  }\n\n  function addLink(aliases) {\n    var i, alias, normal0, normal1;\n\n    if (typeof aliases === \"string\") {\n      aliases = [aliases];\n    }\n\n    for (i = 0; i < aliases.length; i++) {\n      alias = aliases[i].split('|');\n      normal0 = normalizeName(alias[0]);\n      normal1 = normalizeName(alias[1]);\n      links[normal0] = normal1;\n      names[normal0] = alias[0];\n      links[normal1] = normal0;\n      names[normal1] = alias[1];\n    }\n  }\n\n  function addCountries(data) {\n    var i, country_code, country_zones, split;\n    if (!data || !data.length) return;\n\n    for (i = 0; i < data.length; i++) {\n      split = data[i].split('|');\n      country_code = split[0].toUpperCase();\n      country_zones = split[1].split(' ');\n      countries[country_code] = new Country(country_code, country_zones);\n    }\n  }\n\n  function getCountry(name) {\n    name = name.toUpperCase();\n    return countries[name] || null;\n  }\n\n  function zonesForCountry(country, with_offset) {\n    country = getCountry(country);\n    if (!country) return null;\n    var zones = country.zones.sort();\n\n    if (with_offset) {\n      return zones.map(function (zone_name) {\n        var zone = getZone(zone_name);\n        return {\n          name: zone_name,\n          offset: zone.utcOffset(new Date())\n        };\n      });\n    }\n\n    return zones;\n  }\n\n  function loadData(data) {\n    addZone(data.zones);\n    addLink(data.links);\n    addCountries(data.countries);\n    tz.dataVersion = data.version;\n  }\n\n  function zoneExists(name) {\n    if (!zoneExists.didShowError) {\n      zoneExists.didShowError = true;\n      logError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n    }\n\n    return !!getZone(name);\n  }\n\n  function needsOffset(m) {\n    var isUnixTimestamp = m._f === 'X' || m._f === 'x';\n    return !!(m._a && m._tzm === undefined && !isUnixTimestamp);\n  }\n\n  function logError(message) {\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error(message);\n    }\n  }\n  /************************************\n  \tmoment.tz namespace\n  ************************************/\n\n\n  function tz(input) {\n    var args = Array.prototype.slice.call(arguments, 0, -1),\n        name = arguments[arguments.length - 1],\n        zone = getZone(name),\n        out = moment.utc.apply(null, args);\n\n    if (zone && !moment.isMoment(input) && needsOffset(out)) {\n      out.add(zone.parse(out), 'minutes');\n    }\n\n    out.tz(name);\n    return out;\n  }\n\n  tz.version = VERSION;\n  tz.dataVersion = '';\n  tz._zones = zones;\n  tz._links = links;\n  tz._names = names;\n  tz._countries = countries;\n  tz.add = addZone;\n  tz.link = addLink;\n  tz.load = loadData;\n  tz.zone = getZone;\n  tz.zoneExists = zoneExists; // deprecated in 0.1.0\n\n  tz.guess = guess;\n  tz.names = getNames;\n  tz.Zone = Zone;\n  tz.unpack = unpack;\n  tz.unpackBase60 = unpackBase60;\n  tz.needsOffset = needsOffset;\n  tz.moveInvalidForward = true;\n  tz.moveAmbiguousForward = false;\n  tz.countries = getCountryNames;\n  tz.zonesForCountry = zonesForCountry;\n  /************************************\n  \tInterface with Moment.js\n  ************************************/\n\n  var fn = moment.fn;\n  moment.tz = tz;\n  moment.defaultZone = null;\n\n  moment.updateOffset = function (mom, keepTime) {\n    var zone = moment.defaultZone,\n        offset;\n\n    if (mom._z === undefined) {\n      if (zone && needsOffset(mom) && !mom._isUTC) {\n        mom._d = moment.utc(mom._a)._d;\n        mom.utc().add(zone.parse(mom), 'minutes');\n      }\n\n      mom._z = zone;\n    }\n\n    if (mom._z) {\n      offset = mom._z.utcOffset(mom);\n\n      if (Math.abs(offset) < 16) {\n        offset = offset / 60;\n      }\n\n      if (mom.utcOffset !== undefined) {\n        var z = mom._z;\n        mom.utcOffset(-offset, keepTime);\n        mom._z = z;\n      } else {\n        mom.zone(offset, keepTime);\n      }\n    }\n  };\n\n  fn.tz = function (name, keepTime) {\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n      }\n\n      this._z = getZone(name);\n\n      if (this._z) {\n        moment.updateOffset(this, keepTime);\n      } else {\n        logError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n      }\n\n      return this;\n    }\n\n    if (this._z) {\n      return this._z.name;\n    }\n  };\n\n  function abbrWrap(old) {\n    return function () {\n      if (this._z) {\n        return this._z.abbr(this);\n      }\n\n      return old.call(this);\n    };\n  }\n\n  function resetZoneWrap(old) {\n    return function () {\n      this._z = null;\n      return old.apply(this, arguments);\n    };\n  }\n\n  function resetZoneWrap2(old) {\n    return function () {\n      if (arguments.length > 0) this._z = null;\n      return old.apply(this, arguments);\n    };\n  }\n\n  fn.zoneName = abbrWrap(fn.zoneName);\n  fn.zoneAbbr = abbrWrap(fn.zoneAbbr);\n  fn.utc = resetZoneWrap(fn.utc);\n  fn.local = resetZoneWrap(fn.local);\n  fn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n  moment.tz.setDefault = function (name) {\n    if (major < 2 || major === 2 && minor < 9) {\n      logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n    }\n\n    moment.defaultZone = name ? getZone(name) : null;\n    return moment;\n  }; // Cloning a moment should include the _z property.\n\n\n  var momentProperties = moment.momentProperties;\n\n  if (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n    // moment 2.8.1+\n    momentProperties.push('_z');\n    momentProperties.push('_a');\n  } else if (momentProperties) {\n    // moment 2.7.0\n    momentProperties._z = null;\n  } // INJECT DATA\n\n\n  return moment;\n});","map":{"version":3,"sources":["/home/ayush/Downloads/sticky-note/Frontend/node_modules/moment-timezone/moment-timezone.js"],"names":["root","factory","module","exports","require","define","amd","moment","VERSION","zones","links","countries","names","guesses","cachedGuess","version","logError","momentVersion","split","major","minor","charCodeToInt","charCode","unpackBase60","string","i","parts","whole","fractional","multiplier","num","out","sign","charCodeAt","length","arrayToInt","array","intToUntil","Math","round","Infinity","mapIndices","source","indices","unpack","data","offsets","untils","name","abbrs","population","Zone","packedString","_set","prototype","unpacked","_index","timestamp","target","zone_name","Object","keys","filter","country_code","indexOf","parse","max","offset","offsetNext","offsetPrev","tz","moveAmbiguousForward","moveInvalidForward","abbr","mom","utcOffset","Country","country_name","zone_names","OffsetAt","at","timeString","toTimeString","match","join","undefined","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","scoreOffsetAt","offsetAt","abs","replace","findChange","low","high","mid","diff","Date","userOffsets","startYear","getFullYear","last","change","next","push","sortZoneScores","a","b","localeCompare","addToGuesses","guessesForUserOffsets","offsetsLength","filteredGuesses","j","guessesOffset","hasOwnProperty","rebuildGuess","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","normalizeName","e","zoneScores","zoneScore","getZone","sort","guess","ignoreCache","toLowerCase","addZone","packed","normalized","caller","link","getNames","getCountryNames","addLink","aliases","alias","normal0","normal1","addCountries","country_zones","toUpperCase","getCountry","zonesForCountry","country","with_offset","map","loadData","dataVersion","zoneExists","didShowError","needsOffset","m","isUnixTimestamp","_f","_a","_tzm","message","console","error","input","args","Array","slice","call","arguments","utc","apply","isMoment","add","_zones","_links","_names","_countries","load","fn","defaultZone","updateOffset","keepTime","_z","_isUTC","_d","z","Error","abbrWrap","old","resetZoneWrap","resetZoneWrap2","zoneName","zoneAbbr","local","setDefault","momentProperties","toString"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACzB;AAEA;;AACA,MAAI,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;AACjDD,IAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,OAAO,CAAC,QAAD,CAAR,CAAxB,CADiD,CACJ;AAC7C,GAFD,MAEO,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AACtDD,IAAAA,MAAM,CAAC,CAAC,QAAD,CAAD,EAAaJ,OAAb,CAAN,CADsD,CACT;AAC7C,GAFM,MAEA;AACNA,IAAAA,OAAO,CAACD,IAAI,CAACO,MAAN,CAAP,CADM,CACuC;AAC7C;AACD,CAXA,EAWC,IAXD,EAWO,UAAUA,MAAV,EAAkB;AACzB,eADyB,CAGzB;AACA;AACA;AACA;AACA;;AAEA,MAAIC,OAAO,GAAG,QAAd;AAAA,MACCC,KAAK,GAAG,EADT;AAAA,MAECC,KAAK,GAAG,EAFT;AAAA,MAGCC,SAAS,GAAG,EAHb;AAAA,MAICC,KAAK,GAAG,EAJT;AAAA,MAKCC,OAAO,GAAG,EALX;AAAA,MAMCC,WAND;;AAQA,MAAI,CAACP,MAAD,IAAW,OAAOA,MAAM,CAACQ,OAAd,KAA0B,QAAzC,EAAmD;AAClDC,IAAAA,QAAQ,CAAC,8FAAD,CAAR;AACA;;AAED,MAAIC,aAAa,GAAGV,MAAM,CAACQ,OAAP,CAAeG,KAAf,CAAqB,GAArB,CAApB;AAAA,MACCC,KAAK,GAAG,CAACF,aAAa,CAAC,CAAD,CADvB;AAAA,MAECG,KAAK,GAAG,CAACH,aAAa,CAAC,CAAD,CAFvB,CArByB,CAyBzB;;AACA,MAAIE,KAAK,GAAG,CAAR,IAAcA,KAAK,KAAK,CAAV,IAAeC,KAAK,GAAG,CAAzC,EAA6C;AAC5CJ,IAAAA,QAAQ,CAAC,0EAA0ET,MAAM,CAACQ,OAAjF,GAA2F,oBAA5F,CAAR;AACA;AAED;;;;;AAIA,WAASM,aAAT,CAAuBC,QAAvB,EAAiC;AAChC,QAAIA,QAAQ,GAAG,EAAf,EAAmB;AAClB,aAAOA,QAAQ,GAAG,EAAlB;AACA,KAFD,MAEO,IAAIA,QAAQ,GAAG,EAAf,EAAmB;AACzB,aAAOA,QAAQ,GAAG,EAAlB;AACA;;AACD,WAAOA,QAAQ,GAAG,EAAlB;AACA;;AAED,WAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC7B,QAAIC,CAAC,GAAG,CAAR;AAAA,QACCC,KAAK,GAAGF,MAAM,CAACN,KAAP,CAAa,GAAb,CADT;AAAA,QAECS,KAAK,GAAGD,KAAK,CAAC,CAAD,CAFd;AAAA,QAGCE,UAAU,GAAGF,KAAK,CAAC,CAAD,CAAL,IAAY,EAH1B;AAAA,QAICG,UAAU,GAAG,CAJd;AAAA,QAKCC,GALD;AAAA,QAMCC,GAAG,GAAG,CANP;AAAA,QAOCC,IAAI,GAAG,CAPR,CAD6B,CAU7B;;AACA,QAAIR,MAAM,CAACS,UAAP,CAAkB,CAAlB,MAAyB,EAA7B,EAAiC;AAChCR,MAAAA,CAAC,GAAG,CAAJ;AACAO,MAAAA,IAAI,GAAG,CAAC,CAAR;AACA,KAd4B,CAgB7B;;;AACA,SAAKP,CAAL,EAAQA,CAAC,GAAGE,KAAK,CAACO,MAAlB,EAA0BT,CAAC,EAA3B,EAA+B;AAC9BK,MAAAA,GAAG,GAAGT,aAAa,CAACM,KAAK,CAACM,UAAN,CAAiBR,CAAjB,CAAD,CAAnB;AACAM,MAAAA,GAAG,GAAG,KAAKA,GAAL,GAAWD,GAAjB;AACA,KApB4B,CAsB7B;;;AACA,SAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGG,UAAU,CAACM,MAA3B,EAAmCT,CAAC,EAApC,EAAwC;AACvCI,MAAAA,UAAU,GAAGA,UAAU,GAAG,EAA1B;AACAC,MAAAA,GAAG,GAAGT,aAAa,CAACO,UAAU,CAACK,UAAX,CAAsBR,CAAtB,CAAD,CAAnB;AACAM,MAAAA,GAAG,IAAID,GAAG,GAAGD,UAAb;AACA;;AAED,WAAOE,GAAG,GAAGC,IAAb;AACA;;AAED,WAASG,UAAT,CAAqBC,KAArB,EAA4B;AAC3B,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,KAAK,CAACF,MAA1B,EAAkCT,CAAC,EAAnC,EAAuC;AACtCW,MAAAA,KAAK,CAACX,CAAD,CAAL,GAAWF,YAAY,CAACa,KAAK,CAACX,CAAD,CAAN,CAAvB;AACA;AACD;;AAED,WAASY,UAAT,CAAqBD,KAArB,EAA4BF,MAA5B,EAAoC;AACnC,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,MAApB,EAA4BT,CAAC,EAA7B,EAAiC;AAChCW,MAAAA,KAAK,CAACX,CAAD,CAAL,GAAWa,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,CAACX,CAAC,GAAG,CAAL,CAAL,IAAgB,CAAjB,IAAuBW,KAAK,CAACX,CAAD,CAAL,GAAW,KAA7C,CAAX,CADgC,CACiC;AACjE;;AAEDW,IAAAA,KAAK,CAACF,MAAM,GAAG,CAAV,CAAL,GAAoBM,QAApB;AACA;;AAED,WAASC,UAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAsC;AACrC,QAAIZ,GAAG,GAAG,EAAV;AAAA,QAAcN,CAAd;;AAEA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,OAAO,CAACT,MAAxB,EAAgCT,CAAC,EAAjC,EAAqC;AACpCM,MAAAA,GAAG,CAACN,CAAD,CAAH,GAASiB,MAAM,CAACC,OAAO,CAAClB,CAAD,CAAR,CAAf;AACA;;AAED,WAAOM,GAAP;AACA;;AAED,WAASa,MAAT,CAAiBpB,MAAjB,EAAyB;AACxB,QAAIqB,IAAI,GAAGrB,MAAM,CAACN,KAAP,CAAa,GAAb,CAAX;AAAA,QACC4B,OAAO,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,KAAR,CAAc,GAAd,CADX;AAAA,QAECyB,OAAO,GAAGE,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,KAAR,CAAc,EAAd,CAFX;AAAA,QAGC6B,MAAM,GAAIF,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,KAAR,CAAc,GAAd,CAHX;AAKAiB,IAAAA,UAAU,CAACW,OAAD,CAAV;AACAX,IAAAA,UAAU,CAACQ,OAAD,CAAV;AACAR,IAAAA,UAAU,CAACY,MAAD,CAAV;AAEAV,IAAAA,UAAU,CAACU,MAAD,EAASJ,OAAO,CAACT,MAAjB,CAAV;AAEA,WAAO;AACNc,MAAAA,IAAI,EAASH,IAAI,CAAC,CAAD,CADX;AAENI,MAAAA,KAAK,EAAQR,UAAU,CAACI,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,KAAR,CAAc,GAAd,CAAD,EAAqByB,OAArB,CAFjB;AAGNG,MAAAA,OAAO,EAAML,UAAU,CAACK,OAAD,EAAUH,OAAV,CAHjB;AAINI,MAAAA,MAAM,EAAOA,MAJP;AAKNG,MAAAA,UAAU,EAAGL,IAAI,CAAC,CAAD,CAAJ,GAAU;AALjB,KAAP;AAOA;AAED;;;;;AAIA,WAASM,IAAT,CAAeC,YAAf,EAA6B;AAC5B,QAAIA,YAAJ,EAAkB;AACjB,WAAKC,IAAL,CAAUT,MAAM,CAACQ,YAAD,CAAhB;AACA;AACD;;AAEDD,EAAAA,IAAI,CAACG,SAAL,GAAiB;AAChBD,IAAAA,IAAI,EAAG,UAAUE,QAAV,EAAoB;AAC1B,WAAKP,IAAL,GAAkBO,QAAQ,CAACP,IAA3B;AACA,WAAKC,KAAL,GAAkBM,QAAQ,CAACN,KAA3B;AACA,WAAKF,MAAL,GAAkBQ,QAAQ,CAACR,MAA3B;AACA,WAAKD,OAAL,GAAkBS,QAAQ,CAACT,OAA3B;AACA,WAAKI,UAAL,GAAkBK,QAAQ,CAACL,UAA3B;AACA,KAPe;AAShBM,IAAAA,MAAM,EAAG,UAAUC,SAAV,EAAqB;AAC7B,UAAIC,MAAM,GAAG,CAACD,SAAd;AAAA,UACCV,MAAM,GAAG,KAAKA,MADf;AAAA,UAECtB,CAFD;;AAIA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsB,MAAM,CAACb,MAAvB,EAA+BT,CAAC,EAAhC,EAAoC;AACnC,YAAIiC,MAAM,GAAGX,MAAM,CAACtB,CAAD,CAAnB,EAAwB;AACvB,iBAAOA,CAAP;AACA;AACD;AACD,KAnBe;AAqBhBd,IAAAA,SAAS,EAAG,YAAY;AACvB,UAAIgD,SAAS,GAAG,KAAKX,IAArB;AACA,aAAOY,MAAM,CAACC,IAAP,CAAYlD,SAAZ,EAAuBmD,MAAvB,CAA8B,UAAUC,YAAV,EAAwB;AAC5D,eAAOpD,SAAS,CAACoD,YAAD,CAAT,CAAwBtD,KAAxB,CAA8BuD,OAA9B,CAAsCL,SAAtC,MAAqD,CAAC,CAA7D;AACA,OAFM,CAAP;AAGA,KA1Be;AA4BhBM,IAAAA,KAAK,EAAG,UAAUR,SAAV,EAAqB;AAC5B,UAAIC,MAAM,GAAI,CAACD,SAAf;AAAA,UACCX,OAAO,GAAG,KAAKA,OADhB;AAAA,UAECC,MAAM,GAAI,KAAKA,MAFhB;AAAA,UAGCmB,GAAG,GAAOnB,MAAM,CAACb,MAAP,GAAgB,CAH3B;AAAA,UAICiC,MAJD;AAAA,UAISC,UAJT;AAAA,UAIqBC,UAJrB;AAAA,UAIiC5C,CAJjC;;AAMA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyC,GAAhB,EAAqBzC,CAAC,EAAtB,EAA0B;AACzB0C,QAAAA,MAAM,GAAOrB,OAAO,CAACrB,CAAD,CAApB;AACA2C,QAAAA,UAAU,GAAGtB,OAAO,CAACrB,CAAC,GAAG,CAAL,CAApB;AACA4C,QAAAA,UAAU,GAAGvB,OAAO,CAACrB,CAAC,GAAGA,CAAC,GAAG,CAAP,GAAWA,CAAb,CAApB;;AAEA,YAAI0C,MAAM,GAAGC,UAAT,IAAuBE,EAAE,CAACC,oBAA9B,EAAoD;AACnDJ,UAAAA,MAAM,GAAGC,UAAT;AACA,SAFD,MAEO,IAAID,MAAM,GAAGE,UAAT,IAAuBC,EAAE,CAACE,kBAA9B,EAAkD;AACxDL,UAAAA,MAAM,GAAGE,UAAT;AACA;;AAED,YAAIX,MAAM,GAAGX,MAAM,CAACtB,CAAD,CAAN,GAAa0C,MAAM,GAAG,KAAnC,EAA2C;AAC1C,iBAAOrB,OAAO,CAACrB,CAAD,CAAd;AACA;AACD;;AAED,aAAOqB,OAAO,CAACoB,GAAD,CAAd;AACA,KApDe;AAsDhBO,IAAAA,IAAI,EAAG,UAAUC,GAAV,EAAe;AACrB,aAAO,KAAKzB,KAAL,CAAW,KAAKO,MAAL,CAAYkB,GAAZ,CAAX,CAAP;AACA,KAxDe;AA0DhBP,IAAAA,MAAM,EAAG,UAAUO,GAAV,EAAe;AACvB1D,MAAAA,QAAQ,CAAC,4DAAD,CAAR;AACA,aAAO,KAAK8B,OAAL,CAAa,KAAKU,MAAL,CAAYkB,GAAZ,CAAb,CAAP;AACA,KA7De;AA+DhBC,IAAAA,SAAS,EAAG,UAAUD,GAAV,EAAe;AAC1B,aAAO,KAAK5B,OAAL,CAAa,KAAKU,MAAL,CAAYkB,GAAZ,CAAb,CAAP;AACA;AAjEe,GAAjB;AAoEA;;;;AAIA,WAASE,OAAT,CAAkBC,YAAlB,EAAgCC,UAAhC,EAA4C;AAC3C,SAAK9B,IAAL,GAAY6B,YAAZ;AACA,SAAKpE,KAAL,GAAaqE,UAAb;AACA;AAED;;;;;AAIA,WAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACrB,QAAIC,UAAU,GAAGD,EAAE,CAACE,YAAH,EAAjB;AACA,QAAIT,IAAI,GAAGQ,UAAU,CAACE,KAAX,CAAiB,cAAjB,CAAX;;AACA,QAAIV,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAhB,EAAqB;AACpB;AACA;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAJ,CAAQU,KAAR,CAAc,QAAd,CAAP;AACAV,MAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,CAACW,IAAL,CAAU,EAAV,CAAH,GAAmBC,SAA9B;AACA,KALD,MAKO;AACN;AACA;AACAZ,MAAAA,IAAI,GAAGQ,UAAU,CAACE,KAAX,CAAiB,aAAjB,CAAP;AACAV,MAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAP,GAAaY,SAAxB;AACA;;AAED,QAAIZ,IAAI,KAAK,KAAb,EAAoB;AACnBA,MAAAA,IAAI,GAAGY,SAAP;AACA;;AAED,SAAKL,EAAL,GAAU,CAACA,EAAX;AACA,SAAKP,IAAL,GAAYA,IAAZ;AACA,SAAKN,MAAL,GAAca,EAAE,CAACM,iBAAH,EAAd;AACA;;AAED,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACxB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA;;AAEDH,EAAAA,SAAS,CAACjC,SAAV,CAAoBqC,aAApB,GAAoC,UAAUC,QAAV,EAAoB;AACvD,SAAKH,WAAL,IAAoBnD,IAAI,CAACuD,GAAL,CAAS,KAAKL,IAAL,CAAUb,SAAV,CAAoBiB,QAAQ,CAACZ,EAA7B,IAAmCY,QAAQ,CAACzB,MAArD,CAApB;;AACA,QAAI,KAAKqB,IAAL,CAAUf,IAAV,CAAemB,QAAQ,CAACZ,EAAxB,EAA4Bc,OAA5B,CAAoC,SAApC,EAA+C,EAA/C,MAAuDF,QAAQ,CAACnB,IAApE,EAA0E;AACzE,WAAKiB,SAAL;AACA;AACD,GALD;;AAOA,WAASK,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC9B,QAAIC,GAAJ,EAASC,IAAT;;AAEA,WAAQA,IAAI,GAAG,CAAC,CAACF,IAAI,CAACjB,EAAL,GAAUgB,GAAG,CAAChB,EAAf,IAAqB,IAArB,GAA4B,CAA7B,IAAkC,GAAjD,EAAuD;AACtDkB,MAAAA,GAAG,GAAG,IAAInB,QAAJ,CAAa,IAAIqB,IAAJ,CAASJ,GAAG,CAAChB,EAAJ,GAASmB,IAAlB,CAAb,CAAN;;AACA,UAAID,GAAG,CAAC/B,MAAJ,KAAe6B,GAAG,CAAC7B,MAAvB,EAA+B;AAC9B6B,QAAAA,GAAG,GAAGE,GAAN;AACA,OAFD,MAEO;AACND,QAAAA,IAAI,GAAGC,GAAP;AACA;AACD;;AAED,WAAOF,GAAP;AACA;;AAED,WAASK,WAAT,GAAuB;AACtB,QAAIC,SAAS,GAAG,IAAIF,IAAJ,GAAWG,WAAX,KAA2B,CAA3C;AAAA,QACCC,IAAI,GAAG,IAAIzB,QAAJ,CAAa,IAAIqB,IAAJ,CAASE,SAAT,EAAoB,CAApB,EAAuB,CAAvB,CAAb,CADR;AAAA,QAECxD,OAAO,GAAG,CAAC0D,IAAD,CAFX;AAAA,QAGCC,MAHD;AAAA,QAGSC,IAHT;AAAA,QAGejF,CAHf;;AAKA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxBiF,MAAAA,IAAI,GAAG,IAAI3B,QAAJ,CAAa,IAAIqB,IAAJ,CAASE,SAAT,EAAoB7E,CAApB,EAAuB,CAAvB,CAAb,CAAP;;AACA,UAAIiF,IAAI,CAACvC,MAAL,KAAgBqC,IAAI,CAACrC,MAAzB,EAAiC;AAChCsC,QAAAA,MAAM,GAAGV,UAAU,CAACS,IAAD,EAAOE,IAAP,CAAnB;AACA5D,QAAAA,OAAO,CAAC6D,IAAR,CAAaF,MAAb;AACA3D,QAAAA,OAAO,CAAC6D,IAAR,CAAa,IAAI5B,QAAJ,CAAa,IAAIqB,IAAJ,CAASK,MAAM,CAACzB,EAAP,GAAY,GAArB,CAAb,CAAb;AACA;;AACDwB,MAAAA,IAAI,GAAGE,IAAP;AACA;;AAED,SAAKjF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACvBqB,MAAAA,OAAO,CAAC6D,IAAR,CAAa,IAAI5B,QAAJ,CAAa,IAAIqB,IAAJ,CAASE,SAAS,GAAG7E,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAAb,CAAb;AACAqB,MAAAA,OAAO,CAAC6D,IAAR,CAAa,IAAI5B,QAAJ,CAAa,IAAIqB,IAAJ,CAASE,SAAS,GAAG7E,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAAb,CAAb;AACA;;AAED,WAAOqB,OAAP;AACA;;AAED,WAAS8D,cAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAC9B,QAAID,CAAC,CAACpB,WAAF,KAAkBqB,CAAC,CAACrB,WAAxB,EAAqC;AACpC,aAAOoB,CAAC,CAACpB,WAAF,GAAgBqB,CAAC,CAACrB,WAAzB;AACA;;AACD,QAAIoB,CAAC,CAACnB,SAAF,KAAgBoB,CAAC,CAACpB,SAAtB,EAAiC;AAChC,aAAOmB,CAAC,CAACnB,SAAF,GAAcoB,CAAC,CAACpB,SAAvB;AACA;;AACD,QAAImB,CAAC,CAACrB,IAAF,CAAOtC,UAAP,KAAsB4D,CAAC,CAACtB,IAAF,CAAOtC,UAAjC,EAA6C;AAC5C,aAAO4D,CAAC,CAACtB,IAAF,CAAOtC,UAAP,GAAoB2D,CAAC,CAACrB,IAAF,CAAOtC,UAAlC;AACA;;AACD,WAAO4D,CAAC,CAACtB,IAAF,CAAOxC,IAAP,CAAY+D,aAAZ,CAA0BF,CAAC,CAACrB,IAAF,CAAOxC,IAAjC,CAAP;AACA;;AAED,WAASgE,YAAT,CAAuBhE,IAAvB,EAA6BF,OAA7B,EAAsC;AACrC,QAAIrB,CAAJ,EAAO0C,MAAP;AACAhC,IAAAA,UAAU,CAACW,OAAD,CAAV;;AACA,SAAKrB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqB,OAAO,CAACZ,MAAxB,EAAgCT,CAAC,EAAjC,EAAqC;AACpC0C,MAAAA,MAAM,GAAGrB,OAAO,CAACrB,CAAD,CAAhB;AACAZ,MAAAA,OAAO,CAACsD,MAAD,CAAP,GAAkBtD,OAAO,CAACsD,MAAD,CAAP,IAAmB,EAArC;AACAtD,MAAAA,OAAO,CAACsD,MAAD,CAAP,CAAgBnB,IAAhB,IAAwB,IAAxB;AACA;AACD;;AAED,WAASiE,qBAAT,CAAgCnE,OAAhC,EAAyC;AACxC,QAAIoE,aAAa,GAAGpE,OAAO,CAACZ,MAA5B;AAAA,QACCiF,eAAe,GAAG,EADnB;AAAA,QAECpF,GAAG,GAAG,EAFP;AAAA,QAGCN,CAHD;AAAA,QAGI2F,CAHJ;AAAA,QAGOC,aAHP;;AAKA,SAAK5F,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyF,aAAhB,EAA+BzF,CAAC,EAAhC,EAAoC;AACnC4F,MAAAA,aAAa,GAAGxG,OAAO,CAACiC,OAAO,CAACrB,CAAD,CAAP,CAAW0C,MAAZ,CAAP,IAA8B,EAA9C;;AACA,WAAKiD,CAAL,IAAUC,aAAV,EAAyB;AACxB,YAAIA,aAAa,CAACC,cAAd,CAA6BF,CAA7B,CAAJ,EAAqC;AACpCD,UAAAA,eAAe,CAACC,CAAD,CAAf,GAAqB,IAArB;AACA;AACD;AACD;;AAED,SAAK3F,CAAL,IAAU0F,eAAV,EAA2B;AAC1B,UAAIA,eAAe,CAACG,cAAhB,CAA+B7F,CAA/B,CAAJ,EAAuC;AACtCM,QAAAA,GAAG,CAAC4E,IAAJ,CAAS/F,KAAK,CAACa,CAAD,CAAd;AACA;AACD;;AAED,WAAOM,GAAP;AACA;;AAED,WAASwF,YAAT,GAAyB;AAExB;AACA,QAAI;AACH,UAAIC,QAAQ,GAAGC,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAAvD;;AACA,UAAIJ,QAAQ,IAAIA,QAAQ,CAACtF,MAAT,GAAkB,CAAlC,EAAqC;AACpC,YAAIc,IAAI,GAAGpC,KAAK,CAACiH,aAAa,CAACL,QAAD,CAAd,CAAhB;;AACA,YAAIxE,IAAJ,EAAU;AACT,iBAAOA,IAAP;AACA;;AACDhC,QAAAA,QAAQ,CAAC,2BAA2BwG,QAA3B,GAAsC,wDAAvC,CAAR;AACA;AACD,KATD,CASE,OAAOM,CAAP,EAAU,CACX;AACA;;AAED,QAAIhF,OAAO,GAAGuD,WAAW,EAAzB;AAAA,QACCa,aAAa,GAAGpE,OAAO,CAACZ,MADzB;AAAA,QAECrB,OAAO,GAAGoG,qBAAqB,CAACnE,OAAD,CAFhC;AAAA,QAGCiF,UAAU,GAAG,EAHd;AAAA,QAICC,SAJD;AAAA,QAIYvG,CAJZ;AAAA,QAIe2F,CAJf;;AAMA,SAAK3F,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGZ,OAAO,CAACqB,MAAxB,EAAgCT,CAAC,EAAjC,EAAqC;AACpCuG,MAAAA,SAAS,GAAG,IAAIzC,SAAJ,CAAc0C,OAAO,CAACpH,OAAO,CAACY,CAAD,CAAR,CAArB,EAAmCyF,aAAnC,CAAZ;;AACA,WAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,aAAhB,EAA+BE,CAAC,EAAhC,EAAoC;AACnCY,QAAAA,SAAS,CAACrC,aAAV,CAAwB7C,OAAO,CAACsE,CAAD,CAA/B;AACA;;AACDW,MAAAA,UAAU,CAACpB,IAAX,CAAgBqB,SAAhB;AACA;;AAEDD,IAAAA,UAAU,CAACG,IAAX,CAAgBtB,cAAhB;AAEA,WAAOmB,UAAU,CAAC7F,MAAX,GAAoB,CAApB,GAAwB6F,UAAU,CAAC,CAAD,CAAV,CAAcvC,IAAd,CAAmBxC,IAA3C,GAAkDqC,SAAzD;AACA;;AAED,WAAS8C,KAAT,CAAgBC,WAAhB,EAA6B;AAC5B,QAAI,CAACtH,WAAD,IAAgBsH,WAApB,EAAiC;AAChCtH,MAAAA,WAAW,GAAGyG,YAAY,EAA1B;AACA;;AACD,WAAOzG,WAAP;AACA;AAED;;;;;AAIA,WAAS+G,aAAT,CAAwB7E,IAAxB,EAA8B;AAC7B,WAAO,CAACA,IAAI,IAAI,EAAT,EAAaqF,WAAb,GAA2BvC,OAA3B,CAAmC,KAAnC,EAA0C,GAA1C,CAAP;AACA;;AAED,WAASwC,OAAT,CAAkBC,MAAlB,EAA0B;AACzB,QAAI9G,CAAJ,EAAOuB,IAAP,EAAa9B,KAAb,EAAoBsH,UAApB;;AAEA,QAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC/BA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;AACA;;AAED,SAAK9G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8G,MAAM,CAACrG,MAAvB,EAA+BT,CAAC,EAAhC,EAAoC;AACnCP,MAAAA,KAAK,GAAGqH,MAAM,CAAC9G,CAAD,CAAN,CAAUP,KAAV,CAAgB,GAAhB,CAAR;AACA8B,MAAAA,IAAI,GAAG9B,KAAK,CAAC,CAAD,CAAZ;AACAsH,MAAAA,UAAU,GAAGX,aAAa,CAAC7E,IAAD,CAA1B;AACAvC,MAAAA,KAAK,CAAC+H,UAAD,CAAL,GAAoBD,MAAM,CAAC9G,CAAD,CAA1B;AACAb,MAAAA,KAAK,CAAC4H,UAAD,CAAL,GAAoBxF,IAApB;AACAgE,MAAAA,YAAY,CAACwB,UAAD,EAAatH,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,GAAf,CAAb,CAAZ;AACA;AACD;;AAED,WAAS+G,OAAT,CAAkBjF,IAAlB,EAAwByF,MAAxB,EAAgC;AAE/BzF,IAAAA,IAAI,GAAG6E,aAAa,CAAC7E,IAAD,CAApB;AAEA,QAAIwC,IAAI,GAAG/E,KAAK,CAACuC,IAAD,CAAhB;AACA,QAAI0F,IAAJ;;AAEA,QAAIlD,IAAI,YAAYrC,IAApB,EAA0B;AACzB,aAAOqC,IAAP;AACA;;AAED,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC7BA,MAAAA,IAAI,GAAG,IAAIrC,IAAJ,CAASqC,IAAT,CAAP;AACA/E,MAAAA,KAAK,CAACuC,IAAD,CAAL,GAAcwC,IAAd;AACA,aAAOA,IAAP;AACA,KAf8B,CAiB/B;;;AACA,QAAI9E,KAAK,CAACsC,IAAD,CAAL,IAAeyF,MAAM,KAAKR,OAA1B,KAAsCS,IAAI,GAAGT,OAAO,CAACvH,KAAK,CAACsC,IAAD,CAAN,EAAciF,OAAd,CAApD,CAAJ,EAAiF;AAChFzC,MAAAA,IAAI,GAAG/E,KAAK,CAACuC,IAAD,CAAL,GAAc,IAAIG,IAAJ,EAArB;;AACAqC,MAAAA,IAAI,CAACnC,IAAL,CAAUqF,IAAV;;AACAlD,MAAAA,IAAI,CAACxC,IAAL,GAAYpC,KAAK,CAACoC,IAAD,CAAjB;AACA,aAAOwC,IAAP;AACA;;AAED,WAAO,IAAP;AACA;;AAED,WAASmD,QAAT,GAAqB;AACpB,QAAIlH,CAAJ;AAAA,QAAOM,GAAG,GAAG,EAAb;;AAEA,SAAKN,CAAL,IAAUb,KAAV,EAAiB;AAChB,UAAIA,KAAK,CAAC0G,cAAN,CAAqB7F,CAArB,MAA4BhB,KAAK,CAACgB,CAAD,CAAL,IAAYhB,KAAK,CAACC,KAAK,CAACe,CAAD,CAAN,CAA7C,KAA4Db,KAAK,CAACa,CAAD,CAArE,EAA0E;AACzEM,QAAAA,GAAG,CAAC4E,IAAJ,CAAS/F,KAAK,CAACa,CAAD,CAAd;AACA;AACD;;AAED,WAAOM,GAAG,CAACmG,IAAJ,EAAP;AACA;;AAED,WAASU,eAAT,GAA4B;AAC3B,WAAOhF,MAAM,CAACC,IAAP,CAAYlD,SAAZ,CAAP;AACA;;AAED,WAASkI,OAAT,CAAkBC,OAAlB,EAA2B;AAC1B,QAAIrH,CAAJ,EAAOsH,KAAP,EAAcC,OAAd,EAAuBC,OAAvB;;AAEA,QAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,MAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACA;;AAED,SAAKrH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqH,OAAO,CAAC5G,MAAxB,EAAgCT,CAAC,EAAjC,EAAqC;AACpCsH,MAAAA,KAAK,GAAGD,OAAO,CAACrH,CAAD,CAAP,CAAWP,KAAX,CAAiB,GAAjB,CAAR;AAEA8H,MAAAA,OAAO,GAAGnB,aAAa,CAACkB,KAAK,CAAC,CAAD,CAAN,CAAvB;AACAE,MAAAA,OAAO,GAAGpB,aAAa,CAACkB,KAAK,CAAC,CAAD,CAAN,CAAvB;AAEArI,MAAAA,KAAK,CAACsI,OAAD,CAAL,GAAiBC,OAAjB;AACArI,MAAAA,KAAK,CAACoI,OAAD,CAAL,GAAiBD,KAAK,CAAC,CAAD,CAAtB;AAEArI,MAAAA,KAAK,CAACuI,OAAD,CAAL,GAAiBD,OAAjB;AACApI,MAAAA,KAAK,CAACqI,OAAD,CAAL,GAAiBF,KAAK,CAAC,CAAD,CAAtB;AACA;AACD;;AAED,WAASG,YAAT,CAAuBrG,IAAvB,EAA6B;AAC5B,QAAIpB,CAAJ,EAAOsC,YAAP,EAAqBoF,aAArB,EAAoCjI,KAApC;AACA,QAAI,CAAC2B,IAAD,IAAS,CAACA,IAAI,CAACX,MAAnB,EAA2B;;AAC3B,SAAKT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoB,IAAI,CAACX,MAArB,EAA6BT,CAAC,EAA9B,EAAkC;AACjCP,MAAAA,KAAK,GAAG2B,IAAI,CAACpB,CAAD,CAAJ,CAAQP,KAAR,CAAc,GAAd,CAAR;AACA6C,MAAAA,YAAY,GAAG7C,KAAK,CAAC,CAAD,CAAL,CAASkI,WAAT,EAAf;AACAD,MAAAA,aAAa,GAAGjI,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,GAAf,CAAhB;AACAP,MAAAA,SAAS,CAACoD,YAAD,CAAT,GAA0B,IAAIa,OAAJ,CACzBb,YADyB,EAEzBoF,aAFyB,CAA1B;AAIA;AACD;;AAED,WAASE,UAAT,CAAqBrG,IAArB,EAA2B;AAC1BA,IAAAA,IAAI,GAAGA,IAAI,CAACoG,WAAL,EAAP;AACA,WAAOzI,SAAS,CAACqC,IAAD,CAAT,IAAmB,IAA1B;AACA;;AAED,WAASsG,eAAT,CAAyBC,OAAzB,EAAkCC,WAAlC,EAA+C;AAC9CD,IAAAA,OAAO,GAAGF,UAAU,CAACE,OAAD,CAApB;AAEA,QAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AAEd,QAAI9I,KAAK,GAAG8I,OAAO,CAAC9I,KAAR,CAAcyH,IAAd,EAAZ;;AAEA,QAAIsB,WAAJ,EAAiB;AAChB,aAAO/I,KAAK,CAACgJ,GAAN,CAAU,UAAU9F,SAAV,EAAqB;AACrC,YAAI6B,IAAI,GAAGyC,OAAO,CAACtE,SAAD,CAAlB;AACA,eAAO;AACNX,UAAAA,IAAI,EAAEW,SADA;AAENQ,UAAAA,MAAM,EAAEqB,IAAI,CAACb,SAAL,CAAe,IAAIyB,IAAJ,EAAf;AAFF,SAAP;AAIA,OANM,CAAP;AAOA;;AAED,WAAO3F,KAAP;AACA;;AAED,WAASiJ,QAAT,CAAmB7G,IAAnB,EAAyB;AACxByF,IAAAA,OAAO,CAACzF,IAAI,CAACpC,KAAN,CAAP;AACAoI,IAAAA,OAAO,CAAChG,IAAI,CAACnC,KAAN,CAAP;AACAwI,IAAAA,YAAY,CAACrG,IAAI,CAAClC,SAAN,CAAZ;AACA2D,IAAAA,EAAE,CAACqF,WAAH,GAAiB9G,IAAI,CAAC9B,OAAtB;AACA;;AAED,WAAS6I,UAAT,CAAqB5G,IAArB,EAA2B;AAC1B,QAAI,CAAC4G,UAAU,CAACC,YAAhB,EAA8B;AAC7BD,MAAAA,UAAU,CAACC,YAAX,GAA0B,IAA1B;AACC7I,MAAAA,QAAQ,CAAC,2BAA2BgC,IAA3B,GAAkC,sDAAlC,GAA2FA,IAA3F,GAAkG,IAAnG,CAAR;AACD;;AACD,WAAO,CAAC,CAACiF,OAAO,CAACjF,IAAD,CAAhB;AACA;;AAED,WAAS8G,WAAT,CAAsBC,CAAtB,EAAyB;AACxB,QAAIC,eAAe,GAAID,CAAC,CAACE,EAAF,KAAS,GAAT,IAAgBF,CAAC,CAACE,EAAF,KAAS,GAAhD;AACA,WAAO,CAAC,EAAEF,CAAC,CAACG,EAAF,IAASH,CAAC,CAACI,IAAF,KAAW9E,SAApB,IAAkC,CAAC2E,eAArC,CAAR;AACA;;AAED,WAAShJ,QAAT,CAAmBoJ,OAAnB,EAA4B;AAC3B,QAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,OAAOA,OAAO,CAACC,KAAf,KAAyB,UAA/D,EAA2E;AAC1ED,MAAAA,OAAO,CAACC,KAAR,CAAcF,OAAd;AACA;AACD;AAED;;;;;AAIA,WAAS9F,EAAT,CAAaiG,KAAb,EAAoB;AACnB,QAAIC,IAAI,GAAGC,KAAK,CAACnH,SAAN,CAAgBoH,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,EAAyC,CAAC,CAA1C,CAAX;AAAA,QACC5H,IAAI,GAAG4H,SAAS,CAACA,SAAS,CAAC1I,MAAV,GAAmB,CAApB,CADjB;AAAA,QAECsD,IAAI,GAAGyC,OAAO,CAACjF,IAAD,CAFf;AAAA,QAGCjB,GAAG,GAAIxB,MAAM,CAACsK,GAAP,CAAWC,KAAX,CAAiB,IAAjB,EAAuBN,IAAvB,CAHR;;AAKA,QAAIhF,IAAI,IAAI,CAACjF,MAAM,CAACwK,QAAP,CAAgBR,KAAhB,CAAT,IAAmCT,WAAW,CAAC/H,GAAD,CAAlD,EAAyD;AACxDA,MAAAA,GAAG,CAACiJ,GAAJ,CAAQxF,IAAI,CAACvB,KAAL,CAAWlC,GAAX,CAAR,EAAyB,SAAzB;AACA;;AAEDA,IAAAA,GAAG,CAACuC,EAAJ,CAAOtB,IAAP;AAEA,WAAOjB,GAAP;AACA;;AAEDuC,EAAAA,EAAE,CAACvD,OAAH,GAAkBP,OAAlB;AACA8D,EAAAA,EAAE,CAACqF,WAAH,GAAkB,EAAlB;AACArF,EAAAA,EAAE,CAAC2G,MAAH,GAAkBxK,KAAlB;AACA6D,EAAAA,EAAE,CAAC4G,MAAH,GAAkBxK,KAAlB;AACA4D,EAAAA,EAAE,CAAC6G,MAAH,GAAkBvK,KAAlB;AACA0D,EAAAA,EAAE,CAAC8G,UAAH,GAAgBzK,SAAhB;AACA2D,EAAAA,EAAE,CAAC0G,GAAH,GAAkB1C,OAAlB;AACAhE,EAAAA,EAAE,CAACoE,IAAH,GAAkBG,OAAlB;AACAvE,EAAAA,EAAE,CAAC+G,IAAH,GAAkB3B,QAAlB;AACApF,EAAAA,EAAE,CAACkB,IAAH,GAAkByC,OAAlB;AACA3D,EAAAA,EAAE,CAACsF,UAAH,GAAkBA,UAAlB,CAhjByB,CAgjBK;;AAC9BtF,EAAAA,EAAE,CAAC6D,KAAH,GAAkBA,KAAlB;AACA7D,EAAAA,EAAE,CAAC1D,KAAH,GAAkB+H,QAAlB;AACArE,EAAAA,EAAE,CAACnB,IAAH,GAAkBA,IAAlB;AACAmB,EAAAA,EAAE,CAAC1B,MAAH,GAAkBA,MAAlB;AACA0B,EAAAA,EAAE,CAAC/C,YAAH,GAAkBA,YAAlB;AACA+C,EAAAA,EAAE,CAACwF,WAAH,GAAkBA,WAAlB;AACAxF,EAAAA,EAAE,CAACE,kBAAH,GAA0B,IAA1B;AACAF,EAAAA,EAAE,CAACC,oBAAH,GAA0B,KAA1B;AACAD,EAAAA,EAAE,CAAC3D,SAAH,GAAkBiI,eAAlB;AACAtE,EAAAA,EAAE,CAACgF,eAAH,GAAqBA,eAArB;AAEA;;;;AAIA,MAAIgC,EAAE,GAAG/K,MAAM,CAAC+K,EAAhB;AAEA/K,EAAAA,MAAM,CAAC+D,EAAP,GAAYA,EAAZ;AAEA/D,EAAAA,MAAM,CAACgL,WAAP,GAAqB,IAArB;;AAEAhL,EAAAA,MAAM,CAACiL,YAAP,GAAsB,UAAU9G,GAAV,EAAe+G,QAAf,EAAyB;AAC9C,QAAIjG,IAAI,GAAGjF,MAAM,CAACgL,WAAlB;AAAA,QACCpH,MADD;;AAGA,QAAIO,GAAG,CAACgH,EAAJ,KAAWrG,SAAf,EAA0B;AACzB,UAAIG,IAAI,IAAIsE,WAAW,CAACpF,GAAD,CAAnB,IAA4B,CAACA,GAAG,CAACiH,MAArC,EAA6C;AAC5CjH,QAAAA,GAAG,CAACkH,EAAJ,GAASrL,MAAM,CAACsK,GAAP,CAAWnG,GAAG,CAACwF,EAAf,EAAmB0B,EAA5B;AACAlH,QAAAA,GAAG,CAACmG,GAAJ,GAAUG,GAAV,CAAcxF,IAAI,CAACvB,KAAL,CAAWS,GAAX,CAAd,EAA+B,SAA/B;AACA;;AACDA,MAAAA,GAAG,CAACgH,EAAJ,GAASlG,IAAT;AACA;;AACD,QAAId,GAAG,CAACgH,EAAR,EAAY;AACXvH,MAAAA,MAAM,GAAGO,GAAG,CAACgH,EAAJ,CAAO/G,SAAP,CAAiBD,GAAjB,CAAT;;AACA,UAAIpC,IAAI,CAACuD,GAAL,CAAS1B,MAAT,IAAmB,EAAvB,EAA2B;AAC1BA,QAAAA,MAAM,GAAGA,MAAM,GAAG,EAAlB;AACA;;AACD,UAAIO,GAAG,CAACC,SAAJ,KAAkBU,SAAtB,EAAiC;AAChC,YAAIwG,CAAC,GAAGnH,GAAG,CAACgH,EAAZ;AACAhH,QAAAA,GAAG,CAACC,SAAJ,CAAc,CAACR,MAAf,EAAuBsH,QAAvB;AACA/G,QAAAA,GAAG,CAACgH,EAAJ,GAASG,CAAT;AACA,OAJD,MAIO;AACNnH,QAAAA,GAAG,CAACc,IAAJ,CAASrB,MAAT,EAAiBsH,QAAjB;AACA;AACD;AACD,GAxBD;;AA0BAH,EAAAA,EAAE,CAAChH,EAAH,GAAQ,UAAUtB,IAAV,EAAgByI,QAAhB,EAA0B;AACjC,QAAIzI,IAAJ,EAAU;AACT,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC7B,cAAM,IAAI8I,KAAJ,CAAU,0CAA0C9I,IAA1C,GAAiD,IAAjD,GAAwD,OAAOA,IAA/D,GAAsE,GAAhF,CAAN;AACA;;AACD,WAAK0I,EAAL,GAAUzD,OAAO,CAACjF,IAAD,CAAjB;;AACA,UAAI,KAAK0I,EAAT,EAAa;AACZnL,QAAAA,MAAM,CAACiL,YAAP,CAAoB,IAApB,EAA0BC,QAA1B;AACA,OAFD,MAEO;AACNzK,QAAAA,QAAQ,CAAC,qCAAqCgC,IAArC,GAA4C,0DAA7C,CAAR;AACA;;AACD,aAAO,IAAP;AACA;;AACD,QAAI,KAAK0I,EAAT,EAAa;AAAE,aAAO,KAAKA,EAAL,CAAQ1I,IAAf;AAAsB;AACrC,GAdD;;AAgBA,WAAS+I,QAAT,CAAmBC,GAAnB,EAAwB;AACvB,WAAO,YAAY;AAClB,UAAI,KAAKN,EAAT,EAAa;AAAE,eAAO,KAAKA,EAAL,CAAQjH,IAAR,CAAa,IAAb,CAAP;AAA4B;;AAC3C,aAAOuH,GAAG,CAACrB,IAAJ,CAAS,IAAT,CAAP;AACA,KAHD;AAIA;;AAED,WAASsB,aAAT,CAAwBD,GAAxB,EAA6B;AAC5B,WAAO,YAAY;AAClB,WAAKN,EAAL,GAAU,IAAV;AACA,aAAOM,GAAG,CAAClB,KAAJ,CAAU,IAAV,EAAgBF,SAAhB,CAAP;AACA,KAHD;AAIA;;AAED,WAASsB,cAAT,CAAyBF,GAAzB,EAA8B;AAC7B,WAAO,YAAY;AAClB,UAAIpB,SAAS,CAAC1I,MAAV,GAAmB,CAAvB,EAA0B,KAAKwJ,EAAL,GAAU,IAAV;AAC1B,aAAOM,GAAG,CAAClB,KAAJ,CAAU,IAAV,EAAgBF,SAAhB,CAAP;AACA,KAHD;AAIA;;AAEDU,EAAAA,EAAE,CAACa,QAAH,GAAeJ,QAAQ,CAACT,EAAE,CAACa,QAAJ,CAAvB;AACAb,EAAAA,EAAE,CAACc,QAAH,GAAeL,QAAQ,CAACT,EAAE,CAACc,QAAJ,CAAvB;AACAd,EAAAA,EAAE,CAACT,GAAH,GAAeoB,aAAa,CAACX,EAAE,CAACT,GAAJ,CAA5B;AACAS,EAAAA,EAAE,CAACe,KAAH,GAAeJ,aAAa,CAACX,EAAE,CAACe,KAAJ,CAA5B;AACAf,EAAAA,EAAE,CAAC3G,SAAH,GAAeuH,cAAc,CAACZ,EAAE,CAAC3G,SAAJ,CAA7B;;AAEApE,EAAAA,MAAM,CAAC+D,EAAP,CAAUgI,UAAV,GAAuB,UAAStJ,IAAT,EAAe;AACrC,QAAI7B,KAAK,GAAG,CAAR,IAAcA,KAAK,KAAK,CAAV,IAAeC,KAAK,GAAG,CAAzC,EAA6C;AAC5CJ,MAAAA,QAAQ,CAAC,uFAAuFT,MAAM,CAACQ,OAA9F,GAAwG,GAAzG,CAAR;AACA;;AACDR,IAAAA,MAAM,CAACgL,WAAP,GAAqBvI,IAAI,GAAGiF,OAAO,CAACjF,IAAD,CAAV,GAAmB,IAA5C;AACA,WAAOzC,MAAP;AACA,GAND,CA3oByB,CAmpBzB;;;AACA,MAAIgM,gBAAgB,GAAGhM,MAAM,CAACgM,gBAA9B;;AACA,MAAI3I,MAAM,CAACN,SAAP,CAAiBkJ,QAAjB,CAA0B7B,IAA1B,CAA+B4B,gBAA/B,MAAqD,gBAAzD,EAA2E;AAC1E;AACAA,IAAAA,gBAAgB,CAAC5F,IAAjB,CAAsB,IAAtB;AACA4F,IAAAA,gBAAgB,CAAC5F,IAAjB,CAAsB,IAAtB;AACA,GAJD,MAIO,IAAI4F,gBAAJ,EAAsB;AAC5B;AACAA,IAAAA,gBAAgB,CAACb,EAAjB,GAAsB,IAAtB;AACA,GA5pBwB,CA8pBzB;;;AAEA,SAAOnL,MAAP;AACA,CA5qBA,CAAD","sourcesContent":["//! moment-timezone.js\n//! version : 0.5.28\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.28\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n"]},"metadata":{},"sourceType":"script"}